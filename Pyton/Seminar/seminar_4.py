
# –¢–ï–ú–ê –ò–ó–£–ß–ï–ù–ò–Ø –¢–ò–ü–û–í –î–ê–ù–ù–´–• –§–£–ù–ö–¶–ò–ô –ò –ú–û–î–£–õ–ï–ô

"""
fib = [0, 1]

for i in range(10 - 1):
    fib.append(fib[-1] + fib[-2]) # –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø–ª—é—Å –ø—Ä–µ–¥—ã–¥—É—â–∏–π
print(fib)

neg = [0, 1]

for i in range(10):
   neg.append(neg[-2] - neg[-1])  # c–æ–∑–¥–∞–ª–∏ –æ—Ç—Ä–∏—Ü–∞–ª—å–Ω—ã–µ 

neg.reverse()

print(neg + fib[1:]) # —á—Ç–æ–± –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª—Å—è –Ω–æ–ª–∏–∫ –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å —Å [1:]"""

""" 
def My_List_Mix(Arg_in):
#–ú–µ—Ç–æ–¥ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
Temp_arg_in = []
for i in range(0, len(Arg_in) ) :
Temp_arg_in.append(None)

for i in range(0, len(Arg_in) ) :
while True:
Rand_int=random.randint(0,len(Arg_in) - 1)
if Temp_arg_in[Rand_int] == None:
Temp_arg_in[Rand_int] = Arg_in[i]
break
return Temp_arg_in 
"""

"""
lst = []

for i in range(22):
    lst.append(str(i)) # –≤ —Å–ø–∏—Å–æ–∫ –º—ã –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä i 
lst.append('ü•∫') # —Ç–∞–∫ –∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
s = ', '.join(lst) # 
print(s) 
"""

# –†–ê–ë–û–¢–ê –° –§–ê–ô–õ–ê–ú–ò
""" 
# open('new_file', 'at', encoding='utf-8') 
# r - –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞ —á—Ç–µ–Ω–∏–µ w - –æ—Ç–∫—Ä—ã–≤–∞—Ç–∏–µ –Ω–∞ –∑–∞–ø–∏—Å–∞—å —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é a - –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å —Å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º (–¥–æ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º) 
# –µ—Å–ª–∏ —Ñ–∞–π–ª –æ—Ç–∫—Ä—ã—Ç –Ω–∞ –∑–∞–ø–∏—Å—å —Ç–æ –µ–≥–æ —á–∏—Ç–∞—Ç—å –Ω–µ —Å–º–æ–∂–µ–º
# –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç –Ω–∞ —á—Ç–µ–Ω–∏–µ –ø–∏—Å–∞—Ç—å –≤ –Ω–µ–≥–æ –Ω–µ —Å–º–æ–∂–µ–º
# –≤ –∫–∞–∫–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–µ —Ä–∞–±–æ—Ç–∞–µ—Ç encoding 

open('new_file33', 'w', encoding='utf-8') # —Å–æ–∑–¥–∞–¥–∏–º —Ñ–∞–π–ª –Ω–∞ –∑–∞–ø–∏—Å—å
# –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –Ω–∞—á–∞—Ç—å —Å –Ω–∏–º —Ä–∞–±–æ–∞—Ç—å, –µ–≥–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∫—É–¥–∞-—Ç–æ
f = open('new_file33', 'w', encoding='utf-8')
f.write('sdasd') # –∑–∞–ø–∏—Å—å
# –ø–æ—Å–ª–µ –Ω–∞–¥–æ –∑–∞–∫—Ä—ã—Ç—å, –µ—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —á—Ç–µ–Ω–∏–µ —Ç–æ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
f.close()
# –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–æ–ø–∏–µ–π, –ø–æ—Å–ª–µ –∫–ª–æ—Å –≤—Å–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª
"""

# –ú–æ–∂–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å 
"""
with open('new_file33', 'a', encoding='utf-8') as f:
    f.write('qwew\n')
print(11 / 0)
# –º—ã —á—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ–º, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é f 
# –∑–∞—Ç–µ–º —Å –Ω–µ–π —Ä–∞–±–æ—Ç–∞–µ–º
# –∫–∞–∫ —Ç–æ–ª—å–∫–æ –±–ª–æ–∫ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –æ–Ω –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–æ–º –∑–∞–∫—Ä–æ–µ—Ç
"""

# –ß–¢–ï–ù–ò–ï –§–ê–ô–õ–û–í
"""
with open('new_file', 'r', encoding='utf-8') as f:
    f.write('qwew\n')
# print(1, f.read()) # 1 —Ö–æ—Ç–∏–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ä–∞–∑
# print(2, f.read()) # 2 —Ä–∞–∑ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ–±—É–µ–º, –Ω–æ —Ç—É—Ç –Ω–µ —á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç. —Ç.–∫. –º–æ–∂–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑ —Å—á–∏—Ç–∞—Ç—å
print(2, f.readLine()) # —á–∏—Ç–∞–µ—Ç –ø–µ—Ä–≤—É —Å—Ç—Ä–æ–∫—É
print(2, f.readLines()) # —á–∏—Ç–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏
"""

# –õ–£–ß–®–ï –°–ù–ê–ß–ê–õ–ê –ü–†–û–ß–ò–¢–ê–¢–¨ –ü–û–¢–û–ú –ü–û–ú–ï–ù–Ø–¢–¨
"""
with open('new_file', 'r', encoding='utf-8') as f:
    lines = f.readlines()
print(lines)
lines[3] = 'Hello!!!\n'# –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ –ª–∞–π–Ω—Å —Ç—Ä–µ–π—Ç–∏–π —ç—Ç–æ —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ—á–∫–∞ —Ö–µ–ª–ª–æ—É

with open('new_file', 'w', encoding='utf-8') as f: # —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å
    for line in lines: # –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ –ª–∞–π–Ω–µ, –±–µ—Ä–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –ø–æ—Å–ø–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∏ –º—ã –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º
        f.write(line) # –º–æ–π –ª–∞–π–Ω
"""

# –†–ï–ö–£–†–°–ò–Ø 
# –ú–´ —Å–∏—Ç—É–∞—Ü–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–µ—Ç –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è —ç—Ç–∞ —Å–∏—Ç—É–∞—Ü–∏—è
# —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç —Å–∞–º–∞ —Å–µ–±—è
# —É —Ä–µ–∫—É—Ä—Å–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã—Ö–æ–¥
"""
def rec(x):
    if x < 4:
        print(x)
        rec(x+1)
        print(x)
rec(1)

–û—Ç–≤–µ—Ç: 
1
2
3
3
2
1
"""
# –ø—Ä–∏–º–µ—Ä –Ω–∞ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª
"""
def fact(n):
    if n < 0: # –º–µ–Ω—å—à–µ –Ω—É–ª—è 
       return # –±—É–¥–µ—Ç –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞
    elif n == 1: # –∏–Ω–∞—á–µ,
        return 1 # –≤–æ–∑—Ä–∞—â–∞–µ–º –µ–¥–∏–Ω–∏—Ü—É 
    return fact(n - 1) * n  # –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –º—ã –≤–æ–∑—Ä–∞—â–∞–µ–º —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª n - 1 —É–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ n

print(fact(5))
"""

# –ü—Ä–∏–º–µ—Ä —Ñ–∏–±–æ–Ω–∞—á–∏. –ú–∏–Ω—É—Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏:
"""
def fib(n):
    if n <= 2: # –º–µ–Ω—å—à–µ –∏–ª–∏ –Ω—É–ª–µ–≤–æ–µ —á–∏—Å–ª–æ
       return 1# –º—ã –≤–æ–∑—Ä–∞—â–∞–µ–º –æ–¥–∏–Ω
    
    return fib(n - 1) + fib(n - 2)

print(fib(25)) # –ø—Ä–∏ –±–æ–ª—å–Ω–∏—Ö —á–∏—Å–ª–∞—Ö –æ—á–µ–Ω—å –¥–æ–ª–≥–æ –±—É–¥–µ—Ç, —Ç.–∫. –æ–±—Ö–æ–¥ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –∏ –¥–µ—Ä–æ–≤–æ —Ä–∞—Å—Ç–µ—Ç (–ø–æ–≤—Ç–æ—Ä–æ–Ω–∏–µ –±–æ–ª—å—à–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π)
"""
# –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ö–≠–®–∏—Ä–æ–≤–∞–Ω–∏–µ - —ç—Ç–æ —Å–ø–æ—Å–æ–± —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—à–∏—Ö –≤—ã–∑–æ–≤–æ–≤ 

"""
mem = {1: 1, 2: 1} # –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ —ç—Ç–æ –æ–¥–∏–Ω –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–æ –æ–¥–∏–Ω
def fib(n):
    if n not in mem: # –µ—Å–ª–∏ n –Ω–µ —Ä–∞–∑—É –Ω–µ —Å—á–∏—Ç–∞–ª
        mem[n] = fib(n - 1) + fib(n - 2) # —Ç–æ —è –µ–≥–æ –≤—ã—Å—á–∏—Ç—ã–≤–∞—è –≤—Å–µ–≥–æ –æ–¥–∏–Ω —Ä–∞–∑
    return mem[n]# –∫–æ–≥–¥–∞ –ø–æ—Å—á–∏—Ç–∞–µ–º –≤–µ—Ä–Ω–µ–º –µ–≥–æ  
print(fib(405)) # –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –±–æ–ª—å—à–∏–µ —Ü—ã—Ñ—Ä—ã. –ß–¢–æ–± –Ω–µ –ø—Ä–æ—Å—á–∏—Ç—ã–≤–∞–ª–∏ –≤—Å–µ –∑–∞–Ω–æ–≤–æ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é
"""
